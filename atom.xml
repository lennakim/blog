<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Shooter]]></title>
  <subtitle><![CDATA[I am shooter]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://shooter.gl/"/>
  <updated>2016-10-20T03:10:31.000Z</updated>
  <id>http://shooter.gl/</id>
  
  <author>
    <name><![CDATA[shooter]]></name>
    <email><![CDATA[liuningtw163.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[武汉之旅]]></title>
    <link href="http://shooter.gl/wuhan/"/>
    <id>http://shooter.gl/wuhan/</id>
    <published>2016-10-20T03:09:23.000Z</published>
    <updated>2016-10-20T03:10:31.000Z</updated>
    <content type="html"><![CDATA[<p>武汉</p>
<a id="more"></a>
]]></content>
    <summary type="html">
    <![CDATA[<p>武汉</p>]]>
    
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[宜春]]></title>
    <link href="http://shooter.gl/yichun/"/>
    <id>http://shooter.gl/yichun/</id>
    <published>2016-10-16T06:06:51.000Z</published>
    <updated>2016-10-20T06:10:38.000Z</updated>
    <content type="html"><![CDATA[<p>宜春是我终于到达了的一座城市</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>宜春是我终于到达了的一座城市</p>
]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[江西之旅]]></title>
    <link href="http://shooter.gl/jiang-xi/"/>
    <id>http://shooter.gl/jiang-xi/</id>
    <published>2016-10-15T15:10:29.000Z</published>
    <updated>2016-10-15T16:29:43.000Z</updated>
    <content type="html"><![CDATA[<p>10月9号, 我从北京到了南昌, 离第一次去南昌, 有两年之隔.</p>
<a id="more"></a>
<p>我跟一个江西朋友住在了南昌的青年旅舍,他在南昌上学并工作,待了大概有4-5年.<br>我们先去了八一广场, 感受下革命的熊熊烈火, 广场上有阵阵桂花香飘进鼻子里, 特别的香甜.<br>然后晚上去红谷滩, 找另一个朋友大吃了一顿. 吃完饭回来, 我俩儿就在绳金塔附近乱逛.<br>回到旅馆,我们就合计着怎么去庐山.</p>
<p>我们第二天到了九江, 然后在火车站认识了一个拉客的大叔, 就在庐山住, 顺其自然的通过大叔, 订到了旅馆.<br>庐山其实在山顶有个镇, 叫牯岭镇, 人口有1.5万, 不过这个镇跟杨德昌的电影没什么关系.<br>去庐山的 <strong>第一天</strong>, 我们先去了花径, <strong>如琴湖</strong>, 景色美如画, 让我这个从小生活的北方的娃就想住在这里不走了, 不虚此行.</p>
<p><img src="/images/lu-shan.jpg" alt="如琴湖"><br>紧接着, 去了美庐, 参观了毛泽东居住过的别墅, 白居易草堂, 还有一些地质博物馆 …<br>在天快黑的时候, 看了三宝树, 其实就是三颗古树, 其中两颗是柳杉,大概有600年, 剩下一颗是银杏, 大概有1600年.</p>
<p>去庐山的 <strong>第二天</strong>, 我们早上5点半出发, 先去含鄱口, 看日出.<br>然后爬五老峰, 其实就是5个比较高的山峰, 这段其实没多少可说的, 无非怪石嶙峋.<br>爬完五老峰, 我们参观 <strong>三叠泉</strong> , 有这么个说法: “不看三叠泉, 不算庐山客”, 这段景色让人大饱眼福.</p>
<blockquote>
<blockquote>
<p>三叠泉被誉为 “庐山第一奇观”, 由大月山/五老峰的涧水汇合, 从大月山流出,<br>经过五老峰背, 由北崖悬口注入大盘石上, 又飞泻到二级大盘石, 再喷洒至三级盘石, 形成三叠, 故名;<br>势如奔马,声若洪钟,总落差155米. 瀑布分三叠, 各异其趣, 古人描绘曰:”上级如飘云拖练, 中级如碎石摧冰,下级如玉龙走潭.”</p>
</blockquote>
</blockquote>
<p>不过李白的名句 “日照香炉生紫烟, 遥看瀑布挂前川”, 说的并不是三叠泉, 三叠泉直到宋代才被一个樵夫发现.<br>这两天的庐山之行安排的满满的, 然后我们回到了南昌的青旅.</p>
<p>朋友做飞机回北京工作, 我就续租了一个床位, 然后看见了一个黑人老外, 我就跟老外叔叔聊上了天.<br>他叫rice, 美国人, 下飞机后就被人偷走了手机, 我晚上和他一起吃的黄焖鸡米饭, 最起码不太辣.<br>晚上睡觉的时候, 有个哥们呼噜一刻不停, 更有意思的是, 我上铺的哥们, 貌似在撸管,<br>这2个人给我持续的震感, 妙不可言, 白天就出了可爱的黑眼圈.</p>
<p>今天, 跟之前请客的朋友, 去了艾溪湖湿地, 骑着自行车, 那种惬意的感觉, 让我很安静.</p>
<p>有人问我, 为什么来到江西旅游, 有个很主要的原因, 就是朋友在这里; 另外, 这是她生活过的地方.<br>如果当初有机会选,我想我会留在南昌, 在某个地方开始或结束, 也是很好的结果.</p>
<p>我在这里呆了大概7天, 想想也是该离开了, 下次再到这里, 不知道是什么时候.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>10月9号, 我从北京到了南昌, 离第一次去南昌, 有两年之隔.</p>]]>
    
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的第二故乡]]></title>
    <link href="http://shooter.gl/my-second-hometown/"/>
    <id>http://shooter.gl/my-second-hometown/</id>
    <published>2016-10-06T13:10:01.000Z</published>
    <updated>2016-10-06T16:33:22.000Z</updated>
    <content type="html"><![CDATA[<p>有时候我回到北京, 无论我失意彷徨孤独高兴, 这座城市用一种无言的方式包容了我.</p>
<a id="more"></a>
<p>尤其是我在翻江倒海毅然决然的想离开北京的那段时间, 从一个地方仓皇逃到这里, 当我看到如织的人流,竟然热泪盈眶.<br>我带着爱情的希冀, 想背叛这座城市, 在另一个城市重新扎根, 它包容了我这个叛徒, 这里有我的住所,<br>有可爱的朋友们, 有信任我的同事, 只是爱情的花朵没在这里绽放.</p>
<p><strong>这里已经成了我的第二故乡</strong></p>
<p>今天我把猫咪放到朋友家寄养, 我要重新开始旅行了, 看看还没见过的风景, 思考人生.<br>我心深深处, 中有千千结, 愿这次旅行能给我的内心带来平静.</p>
<p>北京在窸窸窣窣的一场雨中, 离冬天又近了, 我骑着自行车感觉有点凉, 就突然想到了这些.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>有时候我回到北京, 无论我失意彷徨孤独高兴, 这座城市用一种无言的方式包容了我.</p>]]>
    
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[青山仍在 水常流]]></title>
    <link href="http://shooter.gl/qing-shan-rang-zai/"/>
    <id>http://shooter.gl/qing-shan-rang-zai/</id>
    <published>2016-09-26T15:12:06.000Z</published>
    <updated>2016-09-26T15:15:55.000Z</updated>
    <content type="html"><![CDATA[<p>青山仍在,水常流, 道一声: 后会有期.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>青山仍在,水常流, 道一声: 后会有期.</p>
]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[屈原庙赋]]></title>
    <link href="http://shooter.gl/qu-yuan-miao-fu/"/>
    <id>http://shooter.gl/qu-yuan-miao-fu/</id>
    <published>2016-09-03T14:50:55.000Z</published>
    <updated>2016-09-03T15:22:42.000Z</updated>
    <content type="html"><![CDATA[<p>屈原庙赋 — 宋 • 苏轼</p>
<p>浮扁舟以适楚兮，过屈原之遗宫。<br>览江上之重山兮，曰惟子之故乡。<br>伊昔放逐兮，渡江涛而南迁。<br>去家千里兮，生无所归而死无以为坟。<br>悲夫！人固有一死兮，处死之为难。<br>徘徊江上欲去而未决兮，俯千仞之惊湍。<br>赋《怀沙》以自伤兮，嗟子独何以为心。<br>忽终章之惨烈兮，逝将去此而沈吟。<br>吾岂不能高举而远游兮，又岂不能退默而深居？独嗷嗷其怨慕兮，恐君臣之愈疏。<br>生既不能力争而强谏兮，死犹冀其感发而改行。<br>茍宗国之颠覆兮，吾亦独何爱于久生。<br>托江神以告冤兮，冯夷教之以上诉。<br>历九关而见帝兮，帝悲伤而不能救。<br>怀瑾佩兰而无所归兮，独茕茕乎中浦。<br>峡山高兮崔嵬，故居废兮行人哀。<br>子孙散兮安在，况复见兮高台。<br>自子之逝今千载兮，世愈狭而难存。<br>贤者畏讥而改度兮，随俗变化斫方以为圆。<br>黾勉于乱世而不能去兮，又或为之臣佐。<br>变丹青于玉莹兮，彼乃谓子为非智。<br>惟高节之不可以企及兮，宜夫人之不吾与。<br>违国去俗死而不顾兮，岂不足以免于后世。<br>呜呼！君子之道，岂必全兮。<br>全身远害，亦或然兮。<br>嗟子区区，独为其难兮。<br>虽不适中，要以为贤兮。<br>夫我何悲，子所安兮。</p>
<hr>
<p>我最有感触的是这句话, <strong>去家千里兮，生无所归而死无以为坟</strong>。离开家乡非常遥远了,没有安身立命之处, 死后也没有人修建坟墓.</p>
<p>今天是来到北京的第七个年头, 整整第七个, 这里已然成了我的第二故乡, 老家相距不远, 却总也不想回去.<br>在这里上学, 工作, 恋爱还是异地, 从一个青春逼人的愣头青变成了一个油滑世故的老油条.<br>还在去年养了一只猫咪, 最后取名— 撸串, 想以后开个烧烤档, 挂付对子 「码农大排档, 撸串到天亮」, 我家猫就负责收钱.</p>
<p>时间你好, 多么希望你慢点走啊.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>屈原庙赋 — 宋 • 苏轼</p>
<p>浮扁舟以适楚兮，过屈原之遗宫。<br>览江上之重山兮，曰惟子之故乡。<br>伊昔放逐兮，渡江涛而南迁。<br>去家千里兮，生无所归而死无以为坟。<br>悲夫！人固有一死兮，处死之为难。<br>徘徊江上欲去而未决兮，俯千仞之惊湍。<b]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何在 Mac os 上使用vagrant]]></title>
    <link href="http://shooter.gl/vagrant/"/>
    <id>http://shooter.gl/vagrant/</id>
    <published>2016-08-14T04:19:40.000Z</published>
    <updated>2016-08-14T08:16:16.000Z</updated>
    <content type="html"><![CDATA[<h3 id="介绍vagrant">介绍vagrant</h3><blockquote>
<p>Vagrant is a tool for building complete development environments. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases development/production parity, and makes the “works on my machine” excuse a relic of the past.</p>
</blockquote>
<p><a href="https://www.vagrantup.com/" target="_blank" rel="external">vagrant</a> 其实是封装了一些命令, 通过命令行的方式管理virtual box镜像,<br>通过vagrant你可以下载/安装镜像, 修改镜像的配置, 比如说设置ip地址, 指定内存大小等.</p>
<h3 id="视频">视频</h3><p>本人录制了一个视频, 可以先睹为快, <a href="http://7sbqv9.com1.z0.glb.clouddn.com/cgc-20160728_vagrant_cut.mp4" target="_blank" rel="external">vagrant video</a>, 149MB, 8分10秒.</p>
<h3 id="No-1">No.1</h3><p>根据自己的系统安装 <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">VirtualBox</a><br>和 <a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="external">vagrant</a></p>
<h3 id="No-2">No.2</h3><p>测试下 vagrant 是否安装成功 <code>vagrant  -v</code></p>
<p>安装过程中, <strong>确保VirtualBox一直在运行</strong></p>
<h3 id="No-3">No.3</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#26032;&#24314;&#19968;&#20010;&#30446;&#24405;&#10;mkdir -p work/vagrant&#10;cd work/vagrant&#10;&#10;# &#25191;&#34892; vagrant init&#10;vagrant init ubuntu/trusty64 #&#29983;&#25104;&#19968;&#20010; Vagrantfile&#25991;&#20214;&#10;&#10;# &#23433;&#35013;box&#25991;&#20214;&#10;vagrant up</span><br></pre></td></tr></table></figure>
<h3 id="No-4">No.4</h3><p>vagrant up 从远程下载box, <strong>可能需要很长的时间, 可以先把box文件下载下来</strong>.</p>
<p>在<a href="https://atlas.hashicorp.com/boxes/search" target="_blank" rel="external">这里</a>能找到官网所提供的box,点击进入相应的box中,<br>里面会显示版本号和支持的虚拟机(virtualBox或者vmware_desktop),确认自己想要的版本号和虚拟机后,<br>点击右上角的版本号进入新页面, 在当前地址后添加 <code>/providers/virtualbox.box</code> 可获得virtualbox版本<br>的box下载地址, vmware_desktop版同理.</p>
<p>然后使用 <code>vagrant box add</code> 命令添加镜像<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant box add &#60;trusty-server-cloudimg-amd64-vagrant-disk.box&#62; --name ubuntu/trusty64</span><br></pre></td></tr></table></figure></p>
<h3 id="No-5">No.5</h3><p>再执行下 <code>vagrant up</code></p>
<p>执行  <code>vagrant ssh</code> 进入虚拟机, ssh在windowns系统下 <strong>不生效</strong></p>
<h3 id="No-6">No.6</h3><p>如果想删除 vagrant box, 执行 <code>vagrant destroy</code></p>
<h3 id="No-7">No.7</h3><table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>vagrant up</td>
<td>启动本地环境</td>
</tr>
<tr>
<td>vagrant halt</td>
<td>关闭本地环境</td>
</tr>
<tr>
<td>vagrant suspend</td>
<td>暂停本地环境</td>
</tr>
<tr>
<td>vagrant resume</td>
<td>恢复本地环境</td>
</tr>
<tr>
<td>vagrant reload</td>
<td>修改Vagrantfile后, 使之生效(相当于先halt, 再up)</td>
</tr>
<tr>
<td>vagrant ssh</td>
<td>通过 ssh 登录本地环境所在虚拟机(只在linux unix下起作用)</td>
</tr>
<tr>
<td>vagrant destroy</td>
<td>彻底移除本地环境</td>
</tr>
</tbody>
</table>
<h3 id="参考资料">参考资料</h3><p><a href="http://haoduoshipin.com/v/105" target="_blank" rel="external">http://haoduoshipin.com/v/105</a></p>
<p><a href="https://imququ.com/post/vagrantup.html" target="_blank" rel="external">https://imququ.com/post/vagrantup.html</a></p>
<p><a href="http://urouge.github.io/how-to-download-vagrant-boxes/" target="_blank" rel="external">http://urouge.github.io/how-to-download-vagrant-boxes/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="介绍vagrant">介绍vagrant</h3><blockquote>
<p>Vagrant is a tool for building complete development environments. With an easy-to-use workf]]>
    </summary>
    
      <category term="vagrant" scheme="http://shooter.gl/tags/vagrant/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[最好的告别]]></title>
    <link href="http://shooter.gl/the-best-farewell/"/>
    <id>http://shooter.gl/the-best-farewell/</id>
    <published>2016-06-20T13:53:07.000Z</published>
    <updated>2016-06-20T13:54:18.000Z</updated>
    <content type="html"><![CDATA[<p>​<br>介绍一本书 <a href="https://book.douban.com/subject/26576861/" target="_blank" rel="external">「最好的告别」</a>,<br>作者是 <a href="https://en.wikipedia.org/wiki/Atul_Gawande" target="_blank" rel="external">阿图•葛文德(Atul Gawande)</a>,<br>他是麻省总医院外科医生, 哈佛医学院教授, 白宫健康政策顾问.</p>
<p>这是一套系列丛书, 包括:</p>
<p>「医生的修炼: 在不完美中探索行医的真相」</p>
<p>「温暖消逝: 关于临终、死亡与丧亲关怀」</p>
<p>「医生的精进: 从仁心仁术到追求卓越」</p>
<p>「最好的告别: 关于衰老与死亡,你必须知道的常识」</p>
<hr>
<p>为啥谈这个问题呢, 缘于一些曾经经历的以及正在经历的一些事情, 想谈谈这个话题.</p>
<p>孔子曰: 「未知生, 焉知死」, 不道是不是孔老夫子的谦辞.<br>以前觉得这个事情离我很远, 而且自己也没资格谈这些东西.<br>等我经历了作为癌症家属的无助, 亲人的离世, 老年人的衰老/赡养问题, 早已不知不觉的卷入其中.</p>
<p>人都是害怕死亡的, 谁都不能代替谁, 不管是多么的豁达通透之人.<br>尤其死亡之前的衰老, 慢慢消耗人的意志,你不在能掌控自己的生活, 不能上街买菜, 不能开车,<br>为了生活, 你要一点儿一点儿的放弃隐私, 你的自尊, 你的要强却告诉你不要这么做.</p>
<p>貌似医学一直是进步的,</p>
<ul>
<li>你可以方便的检查自己的基因序列,</li>
<li>有了比较完善的公共医疗体系,</li>
<li>美国很多大学成立伊始, 就设立了医学院,校之根本.</li>
<li>有顶级的期刊杂志 如<a href="http://www.thelancet.com/" target="_blank" rel="external">柳叶刀</a>,<br>大陆有<a href="http://dxy.com/" target="_blank" rel="external">丁香园</a></li>
</ul>
<p>医学已经深入人心了, 还有这么一款游戏<a href="https://itunes.apple.com/cn/app/id525818839?mt=8" target="_blank" rel="external">瘟疫公司</a>.</p>
<p>但是很简单的感冒并不是靠药物治愈的, 药物只是缓解症状, 还是靠自身的免疫力扛过去.</p>
<p>不知为什么, 大陆对医疗不重视, 对医生也很轻视, 医患问题也相当严重, 一言不合就动枪动炮,<br>还有最近的 ‘莆度众生’ 事件.</p>
<p>在台湾, 日本, 美国, 医生绝对要算精英阶层了, 当然收入也是精英了阶层.</p>
<p>很多人推荐去印度医疗旅游, 就是边旅游边治疗, 印度有相当不错医疗水平, 合理的价格, 大量仿制药(仿制药跟假冒药是两码事).</p>
<p>当医学已经不能拯救你或亲人的时候, 你要怎们做, 告诉自己或亲人接受现实, 安然离去抑或央求医生再试试?</p>
<p>我没有答案, 亦也没提出什么问题, 希望我今后可以平静的面对这个终极问题.</p>
<hr>
<p>最好的告别, 写给最想念的人.</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=347720&auto=0&height=32"><br></iframe>
]]></content>
    <summary type="html">
    <![CDATA[<p>​<br>介绍一本书 <a href="https://book.douban.com/subject/26576861/" target="_blank" rel="external">「最好的告别」</a>,<br>作者是 <a href="https://en.wik]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Cloud9 运行 Telegram Bot]]></title>
    <link href="http://shooter.gl/cloud9-run-telegram-bot/"/>
    <id>http://shooter.gl/cloud9-run-telegram-bot/</id>
    <published>2016-03-22T07:38:36.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://telegram.org/" target="_blank" rel="external">Telegram</a> 是俄罗斯人开发的一款即时聊天工具, 详细的介绍请看 Rei 的 <a href="http://chloerei.com/2015/02/05/telegram/" target="_blank" rel="external">介绍Telegram</a>.</p>
<p><a href="https://c9.io/" target="_blank" rel="external">Cloud9</a> 是什么呢?<br>Cloud9 provides a development environment in the cloud that allows developers to get started with coding immediately and collaborate with their peers.</p>
<h3 id="申请_Telegram_Bot">申请 Telegram Bot</h3><p>添加 机器老爹-<a href="https://telegram.me/BotFather" target="_blank" rel="external">BotFather</a><br>输入指令 <code>/newbot</code>, 选好 <code>name</code> 和 <code>username</code> 之后, 老爹会返回一串 Token:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Use this token to access the HTTP API:&#10;161xxxx:xxxx_xxxx-xxxxxx&#10;&#10;For a description of the Bot API, see this page: https://core.telegram.org/bots/api</span><br></pre></td></tr></table></figure>
<h3 id="Flask_运行_server">Flask 运行 server</h3><p>1 安装 Flask, <code>pip install Flask</code>, pip 类似于 gem</p>
<p>2 来个 hello world</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route("/")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hello World!"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>
<p>运行 <code>python hello.py</code>, 访问 <a href="http://localhost:5000/" target="_blank" rel="external">http://localhost:5000/</a>, 修改端口 <code>app.run(port=&#39;xxxx&#39;)</code></p>
<h3 id="使用_telegram_python_sdk">使用 telegram python sdk</h3><p>用<a href="https://github.com/python-telegram-bot/python-telegram-bot" target="_blank" rel="external">python-telegram-bot</a> 简化开发.</p>
<p>代码如下, 适用于py 2.7</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> telegram</span><br><span class="line"><span class="keyword">import</span> urlparse</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">"&lt;Host&gt;"</span></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">logging.basicConfig(level=logging.DEBUG,</span><br><span class="line">                    format=<span class="string">'%(asctime)s - %(name)s - %(levelname)s - %(message)s'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> bot</span><br><span class="line">bot = telegram.Bot(token = <span class="string">"&lt;Token&gt;"</span>)</span><br><span class="line"></span><br><span class="line">botName = <span class="string">"@MustangBot"</span></span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route("/", methods=["POST", "GET"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setWebhook</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">"GET"</span>:</span><br><span class="line">        logging.info(<span class="string">"Hello, Telegram!"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"OK, Telegram Bot!"</span></span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route("/set_webhook", methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setWebHook</span><span class="params">()</span>:</span></span><br><span class="line">    result = bot.setWebhook(<span class="string">"&#123;&#125;/bot_talk"</span>.format(HOST))</span><br><span class="line">    <span class="keyword">if</span> result:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&#123;&#125; WebHook Setup OK!"</span>.format(botName)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&#123;&#125; WebHook Setup Failed!"</span>.format(botName)</span><br><span class="line"></span><br><span class="line"><span class="decorator">@app.route("/bot_talk", methods=["POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bot_talk</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">"POST"</span>:</span><br><span class="line">        update = telegram.Update.de_json(request.get_json(force=<span class="keyword">True</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> update <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Show me your TOKEN please!"</span></span><br><span class="line">        logging.info(<span class="string">"Calling &#123;&#125;"</span>.format(update.message))</span><br><span class="line">        handdle_message(update.message)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ok"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handdle_message</span><span class="params">(msg)</span>:</span></span><br><span class="line">    text = msg.text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"/echo"</span> <span class="keyword">in</span> text:</span><br><span class="line">      bot.sendMessage(chat_id=msg.chat.id, text=<span class="string">"Hello, I am a nerd"</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"/photo"</span> <span class="keyword">in</span> text:</span><br><span class="line">        bot.sendPhoto(chat_id=msg.chat.id, photo=<span class="string">"&lt;photo-url&gt;"</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">"/help"</span> <span class="keyword">in</span> text:</span><br><span class="line">        helpInfo(msg)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        helpInfo(msg)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">helpInfo</span><span class="params">(msg)</span>:</span></span><br><span class="line">    text =<span class="string">"""</span><br><span class="line">/echo  - echo</span><br><span class="line">/photo - photo</span><br><span class="line">/help  - Help Info</span><br><span class="line"></span><br><span class="line">--------------------------</span><br><span class="line">在cloud9上跑了个telegram_bot</span><br><span class="line">"""</span></span><br><span class="line">    sendTxtMsg(msg, text)</span><br><span class="line"></span><br><span class="line"><span class="comment">########</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendTxtMsg</span><span class="params">(msg, text)</span>:</span></span><br><span class="line">    bot.sendMessage(chat_id=msg.chat.id, text=text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">  app.run(host=os.getenv(<span class="string">'IP'</span>),port=int(os.getenv(<span class="string">'PORT'</span>)))</span><br></pre></td></tr></table></figure>
<h4 id="NOTICE">NOTICE</h4><p>必须把应用设为 public, 获取cloud9的 IP 和 Port</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">os.getenv(<span class="string">'IP'</span>)</span><br><span class="line">os.getenv(<span class="string">'PORT'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改Flask</span></span><br><span class="line">app.run(host=os.getenv(<span class="string">'IP'</span>), port=int(os.getenv(<span class="string">'PORT'</span>)))</span><br></pre></td></tr></table></figure>
<h3 id="享用_Robot">享用 Robot</h3><p>访问 <code>&lt;cloud9-url&gt;/set_webhook</code>, 初始化bot, 添加机器人为好友, 发送 <code>/echo /help /photo</code> 试试哦.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://telegram.org/" target="_blank" rel="external">Telegram</a> 是俄罗斯人开发的一款即时聊天工具, 详细的介绍请看 Rei 的 <a href="http://chloerei.com/]]>
    </summary>
    
      <category term="py" scheme="http://shooter.gl/tags/py/"/>
    
      <category term="python" scheme="http://shooter.gl/tags/python/"/>
    
      <category term="telegram" scheme="http://shooter.gl/tags/telegram/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[天下第一雄关]]></title>
    <link href="http://shooter.gl/ju-yong-guan-great-wall/"/>
    <id>http://shooter.gl/ju-yong-guan-great-wall/</id>
    <published>2016-01-03T05:11:00.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/ju-yong-guan.jpg" alt="居庸关"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/ju-yong-guan.jpg" alt="居庸关"></p>
]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015年再见]]></title>
    <link href="http://shooter.gl/live-2015-12-31-2015-year-end/"/>
    <id>http://shooter.gl/live-2015-12-31-2015-year-end/</id>
    <published>2015-12-31T14:03:01.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>2015年剩下不到几个小时了, 风尘仆仆的一年又要过去了.</p>
<p>今年的状态是比较自由, 比较闲散, 或者说不务正业, 在外面浪荡.<br>有一份工作,1月份入职, 6月份离开, 这又是一段可歌可泣的故事啊.</p>
<p>由于股票被套牢, 在朋友公司兼职了1个多月. 恰好前同事去杭州出差,我想正好成行啊,<br>现在没有正式工作,而且年前就想去杭州了.想想那是7月份,在杭州有个6年没见的老朋友,<br>归去来兮,老友将芜.杭州的印象一直在课本里, 什么清风水软, 才子佳人,西湖美腿的.<br>我作为一个纯北方人,上学也没能去成南方, 所以杭州纵使红粉窟, 吾往矣. 不抒情了, 继续往下编.</p>
<p>回北京后, 去了另一家公司兼职, 学到了非常多的东西, 很是感谢他们.</p>
<p>领养了一只猫咪,取名叫卢比, 因为隔壁的狗狗叫钢蛋, 当时我跟隔壁好友在看<br><a href="http://movie.douban.com/subject/1303815/" target="_blank" rel="external">你丫闭嘴</a>. 现在搬家了,也看不到一个狗一个猫搞基的场景了.<br>今年10月份, 参加了今年的 rubyconf, 第一次去深圳, 满是新鲜感.<br>有很多神交已久却从未谋面的朋友, 甚至想着脱光了游到对面 HK 去.</p>
<p>目前入职<a href="https://haobtc.com/" target="_blank" rel="external">haobtc</a>, 做 python以及前端. 回想人生真是个圈啊,<br>14年底从 <a href="https://yunbi.com/" target="_blank" rel="external">云币</a>离职, 今年年底又进入另一家做 btc 的公司.</p>
<hr>
<p>生活上的琐事吐槽完了, 谈谈工作上的事情.</p>
<p>最开始做了1个多月的ios开发, 尝试一种完全陌生的技术, 算是基本入门, 艺多不压身嘛.</p>
<p>往后的上半年, 技术上基本都是在吃老本, 学习了一些 backbone, mvc 入门了.</p>
<p>离职后, 一边兼职一边跟 liangcoder 请教沟通, 买了很多 cs 方面的经典书.<br>比如CSAPP,SICP … 基础不牢, 地动山摇, 要想精进, 必须打好基础.</p>
<p>有一段时间对 <a href="https://www.haskell.org/" target="_blank" rel="external">haskell</a> 非常感兴趣,<a href="http://book.douban.com/subject/25803388/" target="_blank" rel="external">趣学指南</a>读了一半, 虽然没读完, 也是受益匪浅,</p>
<p>目前在做 python, 把重心放在了前端上, 补充下设计的概念, 这也是一种倔强吧, 说明还能折腾.</p>
<hr>
<p>“未觉池塘春草梦 阶前梧叶已秋声”, 这一年恍如南柯一梦, 很多事情犹如昨天发生, 一幕幕在眼前回放.<br>不知不觉都快一年了, 很多都是14年的事情, 可能我是时差症患者哈. 也希望我在新的一年更上一层楼.</p>
<p>2015年再见, Happy New Year!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>2015年剩下不到几个小时了, 风尘仆仆的一年又要过去了.</p>
<p>今年的状态是比较自由, 比较闲散, 或者说不务正业, 在外面浪荡.<br>有一份工作,1月份入职, 6月份离开, 这又是一段可歌可泣的故事啊.</p>
<p>由于股票被套牢, 在朋友公司兼职了1个多月]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[北京大雪纷飞]]></title>
    <link href="http://shooter.gl/live-2015-11-22-bj-snow/"/>
    <id>http://shooter.gl/live-2015-11-22-bj-snow/</id>
    <published>2015-11-22T15:24:34.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>今天北京飘飘扬扬的下起了大雪, 而我宅在家里, 盖着厚被子, 想赶快退烧.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天北京飘飘扬扬的下起了大雪, 而我宅在家里, 盖着厚被子, 想赶快退烧.</p>
]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我决定加入haobtc]]></title>
    <link href="http://shooter.gl/live-2015-11-05-I-decided-to-join-the-haobtc/"/>
    <id>http://shooter.gl/live-2015-11-05-I-decided-to-join-the-haobtc/</id>
    <published>2015-11-05T15:12:20.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>在大熊的鼓动下, 决定加入 <a href="https://haobtc.com/" target="_blank" rel="external">https://haobtc.com/</a>, 从去年12月份离开btc圈子, 到现在又加入haobtc,<br>差不多过了一年时间.</p>
<p>这一年币价跌宕起伏, 感情也是风雨飘摇, 当我又回到起点, 你在哪里呢?</p>
<p><strong>纵情向前, 既往不恋</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在大熊的鼓动下, 决定加入 <a href="https://haobtc.com/" target="_blank" rel="external">https://haobtc.com/</a>, 从去年12月份离开btc圈子, 到现在又加入haobtc,<br>差不多过]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[参加2015年的 rubyconf]]></title>
    <link href="http://shooter.gl/live-2015-10-12-this-year-rubyconf/"/>
    <id>http://shooter.gl/live-2015-10-12-this-year-rubyconf/</id>
    <published>2015-10-12T15:09:34.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>千里迢迢从北京到深圳参加2015年的rubyconf, 见到了 rei, 华顺.</p>
<p>三大版主终于都认识了,</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>千里迢迢从北京到深圳参加2015年的rubyconf, 见到了 rei, 华顺.</p>
<p>三大版主终于都认识了,</p>
]]>
    </summary>
    
      <category term="rubyconf" scheme="http://shooter.gl/tags/rubyconf/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[领养了一只猫咪]]></title>
    <link href="http://shooter.gl/live-2015-10-07-have-a-cat/"/>
    <id>http://shooter.gl/live-2015-10-07-have-a-cat/</id>
    <published>2015-10-07T15:03:50.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>从朋友那里领养了一只猫咪, 他嫌猫咪太闹腾, 搅和的他严重的睡眠不足, 哈哈.</p>
<p>给它取名叫做卢比, 之前想了很多名: 弯弯 弯仔 铁锤妹妹 雪碧 十一 Tom .</p>
<p>之所以取名叫卢比, 因为隔壁的狗狗叫钢蛋, 如果你看过 <a href="http://movie.douban.com/subject/1303815/" target="_blank" rel="external">你丫闭嘴</a><br>就会明白这里面的梗了.</p>
<p>其实我挺喜欢喊他雪碧, 还给它想了一个别称 [碧池], 不知道可乐可还好么?</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>从朋友那里领养了一只猫咪, 他嫌猫咪太闹腾, 搅和的他严重的睡眠不足, 哈哈.</p>
<p>给它取名叫做卢比, 之前想了很多名: 弯弯 弯仔 铁锤妹妹 雪碧 十一 Tom .</p>
<p>之所以取名叫卢比, 因为隔壁的狗狗叫钢蛋, 如果你看过 <a href="http]]>
    </summary>
    
      <category term="live" scheme="http://shooter.gl/categories/live/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux下查找并批量修改文件扩展名]]></title>
    <link href="http://shooter.gl/tech-2015-09-20-batch-rename-file-suffix/"/>
    <id>http://shooter.gl/tech-2015-09-20-batch-rename-file-suffix/</id>
    <published>2015-09-20T02:23:04.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>Linux下查找并批量修改文件扩展名</p>
<p><a href="http://www.cnblogs.com/knows/archive/2013/01/02/2842489.html" target="_blank" rel="external">http://www.cnblogs.com/knows/archive/2013/01/02/2842489.html</a></p>
<p><a href="http://www.ahlinux.com/start/cmd/498.html" target="_blank" rel="external">http://www.ahlinux.com/start/cmd/498.html</a></p>
<p>find ./ -type f -name “*.less” | xargs  rename “s/less/scss/“</p>
<p>find ./ -type f -name “*.po”  | xargs  -I {} cp {} <new_path> #复制</new_path></p>
<p><a href="http://bbs.chinaunix.net/thread-525576-1-1.html" target="_blank" rel="external">http://bbs.chinaunix.net/thread-525576-1-1.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Linux下查找并批量修改文件扩展名</p>
<p><a href="http://www.cnblogs.com/knows/archive/2013/01/02/2842489.html" target="_blank" rel="external">http://ww]]>
    </summary>
    
      <category term="linux" scheme="http://shooter.gl/tags/linux/"/>
    
      <category term="shell" scheme="http://shooter.gl/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自定义 nginx 的 header]]></title>
    <link href="http://shooter.gl/tech-2015-08-28-customize-nginx-header/"/>
    <id>http://shooter.gl/tech-2015-08-28-customize-nginx-header/</id>
    <published>2015-08-28T09:16:11.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>当你运行 <code>curl -I ruby-china.com</code> 查看返回结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 OK&#10;Cache-Control: no-cache&#10;Pragma: no-cache&#10;Content-Length: 1314&#10;Content-Type: text/html; charset=utf-8&#10;Expires: -1&#10;Server: Microsoft-IIS/7.5&#10;X-AspNet-Version: 4.0.30319&#10;p3p: CP=&#34;CAO PSA OUR&#34;&#10;X-Powered-By: ASP.NET&#10;Date: Fri, 28 Aug 2015 15:42:00 GMT</span><br></pre></td></tr></table></figure>
<p>ruby-china 是用 asp.net 写的?!, 绝不可能吧, 其实这只是用了一个障眼法.</p>
<p>下面马上解密, 前提系统是 ubuntu, 并且已经安装 nginx</p>
<h3 id="安装_more_set_headers_module">安装 more_set_headers module</h3><p>  <code>sudo apt-get install -y nginx-extras</code>,<br>  会安装 <a href="https://github.com/openresty/headers-more-nginx-module" target="_blank" rel="external">more_set_headers</a> module</p>
<h3 id="设置_nginx-conf_文件">设置 nginx.conf 文件</h3><p>  <code>sudo vim /etc/nginx/nginx.conf</code>, 打开 nginx.conf<br>  在http 结构体中, 加入以下内容:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">more_set_headers &#39;Server: Microsoft-IIS/7.5&#39;;&#10;more_set_headers &#39;X-AspNet-Version: 4.0.30319&#39;;&#10;more_set_headers &#39;X-Powered-By: ASP.NET&#39;;</span><br></pre></td></tr></table></figure>
<h3 id="重启_nginx">重启 nginx</h3><p>  <code>sudo service nginx restart</code></p>
<h3 id="测试">测试</h3><p>  curl -I <url>, 看到输出的内容, 已经大功告成.</url></p>
<h3 id="好处">好处</h3><p>  隐藏真正的 http server, 可以迷惑下菜鸟黑客.</p>
<h3 id="PS">PS</h3><p>  原稿写于 2015-06-01, 今天是中元节, 即所谓的鬼节, 没有回老家尽份孝心, 斯人已逝,言犹在耳.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>当你运行 <code>curl -I ruby-china.com</code> 查看返回结果</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">H]]>
    </summary>
    
      <category term="nginx" scheme="http://shooter.gl/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails alias_method_chain 的用法]]></title>
    <link href="http://shooter.gl/tech-2015-08-16-rails-alias-method-chain/"/>
    <id>http://shooter.gl/tech-2015-08-16-rails-alias-method-chain/</id>
    <published>2015-08-16T05:06:07.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>其实 alias alias_method 已经把我弄晕了.</p>
<h3 id="先说_alias_alias_method">先说 alias alias_method</h3><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">name</span></span></span><br><span class="line">    puts <span class="string">"user name is Johnnie Walker"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">mobile</span></span></span><br><span class="line">    puts <span class="string">"user mobile is 186-1111-1111"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">add_alias</span></span></span><br><span class="line">    <span class="keyword">alias</span> alias_mobile mobile</span><br><span class="line">    alias_method <span class="symbol">:alias_name</span>, <span class="symbol">:name</span></span><br><span class="line">    <span class="comment"># 另一种写法</span></span><br><span class="line">    <span class="comment"># alias :alias_mobile :mobile</span></span><br><span class="line">    <span class="comment"># alias_method 'alias_name', 'name'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  add_alias</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Developer</span> <span class="inheritance">&lt; <span class="parent">User</span></span></span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">name</span></span></span><br><span class="line">    puts <span class="string">"developer name is Linus Torvalds"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">mobile</span></span></span><br><span class="line">    puts <span class="string">"developer mobile is 186-9999-9999"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  add_alias</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">user = <span class="constant">User</span>.new</span><br><span class="line">dev = <span class="constant">Developer</span>.new</span><br><span class="line"></span><br><span class="line">dev.alias_mobile  <span class="comment"># =&gt; user mobile is 186-1111-1111</span></span><br><span class="line">user.alias_mobile <span class="comment"># =&gt; user mobile is 186-1111-1111</span></span><br><span class="line">puts <span class="string">"-"</span> * <span class="number">20</span></span><br><span class="line">dev.alias_name  <span class="comment"># =&gt; developer name is Linus Torvalds</span></span><br><span class="line">user.alias_name <span class="comment"># =&gt; user name is Johnnie Walker</span></span><br></pre></td></tr></table></figure>
<p>语法层面的差异可以忽略,  new_name old_name 的顺序总是弄混.</p>
<p>在继承关系中, alias_name 的内容被重写, alias_mobile并没有.</p>
<p>This is because alias is a keyword and it is lexically scoped. It means it treats self as the value of self at the time the source code was read . In contrast alias_method treats self as the value determined at the run time.</p>
<h3 id="alias_method_chain">alias_method_chain</h3><p>alias_method_chain 是 <strong>ActiveSupport</strong> 的一个公有实例方法,<br>同样接受两个参数, 可以是符号, 也可以是字符串, 但第1个参数是原始方法,<br>alias_method的第2个参数是原始方法, 晕~.</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> <span class="inheritance">&lt; <span class="parent">ActiveRecord::Base</span></span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="inheritance">&lt;</span><span class="inheritance">&lt; <span class="parent">self</span></span></span></span><br><span class="line">    <span class="comment">#先将find方法别名</span></span><br><span class="line">    <span class="keyword">alias</span> find_without_args find</span><br><span class="line"></span><br><span class="line">    <span class="comment">#再定义find args 方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_with_args</span><span class="params">(*args)</span></span></span><br><span class="line">      p <span class="string">"调用find之前"</span></span><br><span class="line">      find_without_args</span><br><span class="line">      <span class="comment"># 调用find_without_args 其实就是find方法</span></span><br><span class="line">      p <span class="string">"调用find之后"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">alias</span> find find_with_args</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="constant">Car</span>.find(<span class="symbol">:mustang</span>)</span><br><span class="line"><span class="comment">#实际调用find_with_args, 在find_with_args方法中,</span></span><br><span class="line"><span class="comment">#又再调用了find_without_args, 也就是原生的find方法了.</span></span><br></pre></td></tr></table></figure>
<p>其实 alias_method_chain 只是做了个 dsl</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">alias_method_chain <span class="symbol">:find</span>, <span class="symbol">:args</span></span><br><span class="line"><span class="comment">#相当于</span></span><br><span class="line"><span class="keyword">alias</span> find_with_args find</span><br><span class="line"><span class="keyword">alias</span> find find_without_args</span><br></pre></td></tr></table></figure>
<h3 id="资料">资料</h3><p><a href="http://erniemiller.org/2014/10/23/in-defense-of-alias/" target="_blank" rel="external">In Defense of Alias</a><br><a href="http://blog.bigbinary.com/2012/01/08/alias-vs-alias-method.html" target="_blank" rel="external">alias vs alias_method</a><br><a href="http://zires.info/2010/12/rails-alias_method_chain-rails3/" target="_blank" rel="external">rails alias_method_chain rails3</a><br><a href="http://stackoverflow.com/questions/4763121/should-i-use-alias-or-alias-method" target="_blank" rel="external">Should I use alias or alias_method</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>其实 alias alias_method 已经把我弄晕了.</p>
<h3 id="先说_alias_alias_method">先说 alias alias_method</h3><figure class="highlight ruby"><table><tr><td]]>
    </summary>
    
      <category term="rails" scheme="http://shooter.gl/tags/rails/"/>
    
      <category term="ruby" scheme="http://shooter.gl/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails启动时绑定ip]]></title>
    <link href="http://shooter.gl/tech-2015-07-26-rails-start-bind-ip/"/>
    <id>http://shooter.gl/tech-2015-07-26-rails-start-bind-ip/</id>
    <published>2015-07-25T17:25:48.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>Rails 在升级到4.2后, 使用 <code>rails s</code> 运行程序后, 不再监听 0.0.0.0 端口.<br>导致 <a href="http://localhost:3000" target="_blank" rel="external">http://localhost:3000</a>, <a href="http://127.0.0.1:3000" target="_blank" rel="external">http://127.0.0.1:3000</a> 可以正常访问,<br>当使用 <a href="http://192.168.1.xx:3000/" target="_blank" rel="external">http://192.168.1.xx:3000/</a> 的时候, 访问不到 rails 程序.</p>
<h3 id="解决">解决</h3><p>1 在启动 rails 的时候 绑定ip</p>
<p>  <code>rails s -b 0.0.0.0</code><br>  可以给这条命令指定一个 alias,<br>  <code>alias rsb=&quot;rails s -b 0.0.0.0&quot;</code></p>
<p>2 修改 default_options</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># /config/boot.rb&#10;module Rails&#10;  class Server&#10;    def default_options&#10;      super.merge(Host: &#39;0.0.0.0&#39;, Port: 3000)&#10;    end&#10;  end&#10;end</span><br></pre></td></tr></table></figure>
<h3 id="资料">资料</h3><p><a href="http://stackoverflow.com/a/29562898/1240067" target="_blank" rel="external">How to change the default binding ip of Rails 4.2 development server</a></p>
<p><a href="https://fullstacknotes.com/make-rails-4-2-listen-to-all-interface/" target="_blank" rel="external">Make Rails 4.2 server listens to all interfaces</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Rails 在升级到4.2后, 使用 <code>rails s</code> 运行程序后, 不再监听 0.0.0.0 端口.<br>导致 <a href="http://localhost:3000" target="_blank" rel="external">http]]>
    </summary>
    
      <category term="rails" scheme="http://shooter.gl/tags/rails/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[centOS7 配置 rails 环境]]></title>
    <link href="http://shooter.gl/tech-2015-07-23-centOS7-install-rails-env/"/>
    <id>http://shooter.gl/tech-2015-07-23-centOS7-install-rails-env/</id>
    <published>2015-07-23T08:35:48.000Z</published>
    <updated>2016-05-15T07:22:46.000Z</updated>
    <content type="html"><![CDATA[<p>最近使用 centOS系统安装rails环境, 相较与我经常用的ubuntu, 有很多区别.</p>
<h2 id="基本命令">基本命令</h2><p><code>lsb_release -a</code> 显示系统的详细信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># centOS&#10;LSB Version:  :core-4.1-amd64:core-4.1-noarch&#10;Distributor ID: CentOS&#10;Description:  CentOS Linux release 7.1.1503 (Core)&#10;Release:  7.1.1503&#10;Codename: Core&#10;&#10;# ubuntu&#10;No LSB modules are available.&#10;Distributor ID: Ubuntu&#10;Description:  Ubuntu 14.04.1 LTS&#10;Release:  14.04&#10;Codename: trusty</span><br></pre></td></tr></table></figure>
<p><code>yum</code> 是centOS的包管理工具 , 比 ubuntu的 <code>apt-get</code> 简洁多了.</p>
<hr>
<h2 id="配置环境">配置环境</h2><h3 id="添加普通用户">添加普通用户</h3><p>  <code>sudo adduser &lt;username&gt;</code></p>
<p>  在 <strong>ubuntu</strong> 下是交互命令, 会一步步提示你 输入密码, 电话 地址等, 还会创建 home directory, 系统 Shell</p>
<p>  在 <strong>centOS</strong> 下, 没什么反应.</p>
<h3 id="创建用户密码">创建用户密码</h3><p>  既然 centOS 没反应, 使用 <code>sudo passd &lt;username&gt;</code> 创建密码, 在密码存在的情况下, 可以修改密码</p>
<h3 id="赋予普通用户_sudo_权限">赋予普通用户 sudo 权限</h3><p>  <strong>ubuntu</strong><br>  <code>sudo usermod -a -G sudo &lt;username&gt;</code></p>
<p>  <strong>centOS</strong><br>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ll /etc/sudoers&#10;# -r--r-----&#10;&#10;# /etc/sudoers &#22312; root&#29992;&#25143;&#19979; &#27809;&#26377;&#20889;&#26435;&#38480;&#10;&#10;chmod +w /etc/sudoers # &#28155;&#21152;&#20889;&#26435;&#38480;&#10;&#10;sudo vim /etc/sudoers # &#20462;&#25913;&#25991;&#20214;&#10;&#10;# &#25214;&#21040; root ALL=(ALL) ALL, &#22312;&#19979;&#19968;&#34892;&#21152;&#19978;&#10;&#60;username&#62; ALL=(ALL) ALL</span><br></pre></td></tr></table></figure></p>
<p>  OK, 普通用户也可以之行 sudo 命令了</p>
<h3 id="ssh登录">ssh登录</h3>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir  ~/.ssh&#10;&#10;vim ~/.ssh/authorized_keys&#10;# &#25226;&#20844;&#38053;&#21152;&#20837;&#21040; authorized_keys &#20013;&#21363;&#21487;</span><br></pre></td></tr></table></figure>
<h3 id="关闭_ssh_密码登录">关闭 ssh 密码登录</h3>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim /etc/ssh/ssh_config&#10;&#10;PubkeyAuthentication yes # &#21435;&#25481;&#27880;&#37322;&#10;PasswordAuthentication no # &#21435;&#25481;&#27880;&#37322;, yes &#25913;&#25104; no&#10;ChallengeResponseAuthentication no #  &#21435;&#25481;&#27880;&#37322;, yes &#25913;&#25104; no&#10;&#10;# &#37325;&#21551; sshd &#26381;&#21153;&#10;sudo service ssh  restart # ubuntu&#10;sudo service sshd restart # centOS</span><br></pre></td></tr></table></figure>
<h3 id="安装_rails">安装 rails</h3>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#23433;&#35013;&#20381;&#36182;&#10;sudo yum install -y git-core zlib zlib-devel gcc-c++ patch readline readline-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison curl sqlite-devel&#10;&#10;# &#23433;&#35013; rvm&#10;curl -L get.rvm.io | bash -s stable&#10;source ~/.bashrc&#10;source ~/.bash_profile&#10;&#10;# &#23433;&#35013; ruby&#10;rvm list known          # &#21015;&#20986;&#24050;&#30693;&#30340; ruby &#29256;&#26412;&#10;rvm install 2.2.2       # &#23433;&#35013; ruby &#29256;&#26412;&#10;rvm use 2.2.0 --default # &#20999;&#25442;&#24182;&#35774;&#32622;&#40664;&#35748;ruby &#29256;&#26412;&#10;&#10;# &#23433;&#35013; bundler rails&#10;gem install -V bundler rails</span><br></pre></td></tr></table></figure>
<h3 id="安装_nodejs">安装 nodejs</h3><p>  <code>sudo yum install nodejs</code></p>
<h3 id="安装_nginx">安装 nginx</h3>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure>
<h3 id="安装_mysql">安装 mysql</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install mysql # &#21482;&#23433;&#35013; mysql-client&#10;&#10;sudo yum install mysql mysql-server # &#23433;&#35013; mysql-client  mysql-server&#10;&#10;sudo  yum install mysql-devel # &#19981;&#23433;&#35013;, gem mysql2 &#26412;&#22320;&#32534;&#35793;&#20986;&#38382;&#39064;</span><br></pre></td></tr></table></figure>
<p>PS: 在杭州好闷好热啊</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近使用 centOS系统安装rails环境, 相较与我经常用的ubuntu, 有很多区别.</p>
<h2 id="基本命令">基本命令</h2><p><code>lsb_release -a</code> 显示系统的详细信息</p>
<figure class="hig]]>
    </summary>
    
      <category term="centOS" scheme="http://shooter.gl/tags/centOS/"/>
    
      <category term="rails" scheme="http://shooter.gl/tags/rails/"/>
    
  </entry>
  
</feed>